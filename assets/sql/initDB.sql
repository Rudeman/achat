DROP TABLE IF EXISTS TemporaryAuthTokens;
DROP TABLE IF EXISTS User;
DROP TABLE IF EXISTS Room;
DROP TABLE IF EXISTS UserRoom;
DROP TABLE IF EXISTS Contact;
DROP TABLE IF EXISTS Element;
DROP TABLE IF EXISTS Property;
DROP TABLE IF EXISTS Change;
DROP TABLE IF EXISTS ChangedProperty;
DROP TABLE IF EXISTS Message;
DROP TABLE IF EXISTS ChatMessage;
DROP TABLE IF EXISTS ConsumerCredential;
DROP TABLE IF EXISTS AccessToken;

CREATE TABLE IF NOT EXISTS TemporaryAuthTokens (
  authToken TEXT PRIMARY KEY NOT NULL UNIQUE,
  expireDate NUMERIC NOT NULL);

CREATE  TABLE IF NOT EXISTS User (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE  ,
  login TEXT NOT NULL ,
  pass TEXT NOT NULL ,
  creationDate NUMERIC NOT NULL ,
  authToken TEXT NULL REFERENCES TemporaryAuthTokens(authToken)
  );

CREATE  TABLE IF NOT EXISTS Room (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE  ,
  name TEXT NOT NULL ,
  creationDate NUMERIC NOT NULL ,
  lastUpdateDate NUMERIC NOT NULL ,
  width REAL NOT NULL ,
  height REAL NOT NULL);

CREATE  TABLE IF NOT EXISTS UserRoom (
  userid INTEGER NOT NULL ,
  roomid INTEGER NOT NULL ,
  lastVisitDate NUMERIC NOT NULL ,
  canEdit NUMERIC NOT NULL ,
  canDelete NUMERIC NOT NULL ,
  isOwner NUMERIC NOT NULL,
  PRIMARY KEY (userid,roomid) ,
  FOREIGN KEY(userid) REFERENCES User(id) ,
  FOREIGN KEY(roomid) REFERENCES Room(id)
  );

CREATE  TABLE IF NOT EXISTS Contact (
  userid INTEGER NOT NULL ,
  contactid INTEGER NOT NULL,
  PRIMARY KEY (userid,contactid),
  FOREIGN KEY (userid,contactid) REFERENCES User(id,id) );


CREATE  TABLE IF NOT EXISTS Element (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE  ,
  roomid INTEGER NOT NULL REFERENCES Room(id),
  type TEXT NOT NULL ,
  creationDate NUMERIC NOT NULL ,
  changeDate NUMERIC NOT NULL );


CREATE  TABLE IF NOT EXISTS Property (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE  ,
  elementid INTEGER NOT NULL REFERENCES Element(id),
  name TEXT NOT NULL ,
  value TEXT NOT NULL );


CREATE  TABLE IF NOT EXISTS Change (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE  ,
  changeDate NUMERIC NOT NULL ,
  elementid INTEGER NOT NULL REFERENCES Element(id) );


CREATE  TABLE IF NOT EXISTS ChangedProperty (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE  ,
  changeid INTEGER NOT NULL REFERENCES Change(id),
  name TEXT NOT NULL ,
  value TEXT NOT NULL );


CREATE  TABLE IF NOT EXISTS Message (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE  ,
  userid INTEGER NOT NULL REFERENCES User(id),
  contactid INTEGER NOT NULL REFERENCES User(id),
  sendDate NUMERIC NOT NULL ,
  text TEXT NOT NULL );


CREATE  TABLE IF NOT EXISTS ChatMessage (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE ,
  userid INTEGER NOT NULL REFERENCES User(id),
  roomid INTEGER NOT NULL REFERENCES Room(id),
  sendDate NUMERIC NOT NULL ,
  text TEXT NOT NULL );


CREATE TABLE IF NOT EXISTS ConsumerCredential (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  consumerKey TEXT NOT NULL,
  consumerSecret TEXT NOT NULL);


CREATE TABLE IF NOT EXISTS AccessToken (
  token TEXT NOT NULL,
  tokenSecret TEXT NOT NULL,
  consumerCredentialId INTEGER NOT NULL REFERENCES ConsumerCredentials(id),
  userId INT NOT NULL REFERENCES User(id),
  timeStamp INTEGER NOT NULL,
  PRIMARY KEY(token,tokenSecret));