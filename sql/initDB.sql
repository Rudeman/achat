DROP TABLE IF EXISTS User;
DROP TABLE IF EXISTS Room;
DROP TABLE IF EXISTS UserRoom;
DROP TABLE IF EXISTS Contact;
DROP TABLE IF EXISTS Element;
DROP TABLE IF EXISTS Property;
DROP TABLE IF EXISTS Change;
DROP TABLE IF EXISTS ChangedProperty;
DROP TABLE IF EXISTS ChatMessage;
DROP TABLE IF EXISTS Consumer;
DROP TABLE IF EXISTS AccessToken;

DROP TABLE IF EXISTS ChatThread;
DROP TABLE IF EXISTS ConsumerCredential;
DROP TABLE IF EXISTS DirectMessage;
DROP TABLE IF EXISTS SkipCode;

CREATE  TABLE IF NOT EXISTS User (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  displayName TEXT NOT NULL,
  login TEXT NOT NULL,
  pass TEXT NOT NULL,
  creationDate NUMERIC NOT NULL,
  lastLogin NUMERIC NOT NULL,
  avatar TEXT NOT NULL,
  permitPUSH INT NOT NULL,
  permitEmail INT NOT NULL,
  regId TEXT
);

CREATE  TABLE IF NOT EXISTS Room (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  name TEXT NOT NULL,
  creationDate NUMERIC NOT NULL,
  lastUpdateDate NUMERIC NOT NULL,
  width REAL NOT NULL,
  height REAL NOT NULL
);

CREATE  TABLE IF NOT EXISTS UserRoom (
  userId INTEGER NOT NULL,
  roomId INTEGER NOT NULL,
  lastVisitDate NUMERIC NOT NULL,
  canEdit NUMERIC NOT NULL,
  canDelete NUMERIC NOT NULL,
  isOwner NUMERIC NOT NULL,
  PRIMARY KEY (userId,roomId),
  FOREIGN KEY(userId) REFERENCES User(id),
  FOREIGN KEY(roomId) REFERENCES Room(id)
);

CREATE  TABLE IF NOT EXISTS Contact (
  userId INTEGER NOT NULL ,
  contactId INTEGER NOT NULL,
  creationDate INT NOT NULL,
  isAccepted INT NOT NULL,
  PRIMARY KEY (userid,contactid),
  FOREIGN KEY (userid,contactid) REFERENCES User(id,id)
);


CREATE  TABLE IF NOT EXISTS Element (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  roomId INTEGER NOT NULL REFERENCES Room(id),
  type TEXT NOT NULL,
  creationDate NUMERIC NOT NULL,
  changeDate NUMERIC NOT NULL
);


CREATE  TABLE IF NOT EXISTS Property (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  elementId INTEGER NOT NULL REFERENCES Element(id),
  name TEXT NOT NULL,
  value TEXT NOT NULL
);

CREATE  TABLE IF NOT EXISTS Change (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  changeDate NUMERIC NOT NULL,
  elementId INTEGER NOT NULL REFERENCES Element(id)
);

CREATE  TABLE IF NOT EXISTS ChangedProperty (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  changeId INTEGER NOT NULL REFERENCES Change(id),
  name TEXT NOT NULL,
  value TEXT NOT NULL
);

CREATE  TABLE IF NOT EXISTS ChatMessage (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  userId INTEGER NOT NULL REFERENCES User(id),
  roomId INTEGER NOT NULL REFERENCES Room(id),
  sendDate NUMERIC NOT NULL,
  text TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Consumer (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  key TEXT NOT NULL,
  secret TEXT NOT NULL,
  osType TEXT NOT NULL,
  timeStamp NUMERIC NOT NULL,
  accessType TEXT NOT NULL,
  name TEXT NOT NULL,
  description TEXT,
  callbackURL TEXT,
  url TEXT
);

CREATE TABLE IF NOT EXISTS AccessToken (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
  key TEXT NOT NULL,
  secret TEXT NOT NULL,
  consumerId INTEGER NOT NULL REFERENCES Consumer(id),
  userId INT NOT NULL REFERENCES User(id),
  timeStamp NUMERIC NOT NULL,
  osType NOT NULL,
  accessType TEXT NOT NULL
);
